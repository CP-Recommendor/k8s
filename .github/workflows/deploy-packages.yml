name: Create and publish Docker images

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate docker-compose-generated.yaml
        run: |
          ./generate.sh

      - name: Extract image names from docker-compose-generated.yaml
        id: extract-images
        run: |
          image_names=$(jq -r '.models[].serviceName' config.json)

          # Set the output variable with the extracted image names
          echo "::set-output name=image_names::${image_names}"

      - name: Build and push Docker images
        id: build-push-images
        run: |
          # Split the extracted image names into an array
          IFS=$'\n' read -rd '' -a image_names_array <<< "${{ steps.extract-images.outputs.image_names }}"

          # Iterate over the array of image names
          for image_name in "${image_names_array[@]}"; do
            # Add desired tags and labels to the image
            tag="${image_name}:${{ github.sha }}"
            label="org.example.label=${image_name}"

            docker build -t $tag --label $label .
            docker push $tag
          done